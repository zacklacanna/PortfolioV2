@using System.Collections.Generic
@using ZackV2.Classes
@using ZackV2.Services
@inject IJSRuntime JS
@inject ExperienceModalService ExperienceService

<section id="experience" class="content-container py-5" aria-label="experience">
  <div class="container">
    <h2 class="section-title align-content-start justify-content-start mb-5">Professional Experience</h2>
    <div class="d-flex flex-nowrap overflow-auto scroll-x-container">
      @foreach (var exp in Experiences)
      {
        <div class="netflix-card" @onclick="() => ShowDetail(exp)">
          <div class="card-img" style="background-image: url('@exp.ImageUrl');"></div>
          <div class="card-overlay">
            <p class="mb-1">@exp.Company</p>
            <h5>@exp.Role</h5>
          </div>
          <div class="card-hover-text">Click to see details</div>
        </div>
      }
    </div>
  </div>
</section>

@code {
    private List<ExperienceClass.ExpModel> Experiences = new()
    {
        new ExperienceClass.ExpModel
        {
            Role = "Full-Stack Engineer",
            Company = "Range Automation Systems",
            Dates = "Jan 2024 – Present",
            Location = "Scottsdale, AZ",
            ImageUrl = "cards/ras-card.png",
            Description = "I’ve led the full-stack development of automated golf systems " +
                          "by building a Blazor web app for global tracking and remote control of " +
                          "equipment, architecting AWS REST and WebSocket APIs (with Lambda, DynamoDB, " +
                          "Cognito, and CloudWatch) for scalable, event-driven operations, and engineering " +
                          "back-end SaaS services in C#, Java, and VB.NET. On the data side, I created " +
                          "Python-based solutions—ranging from a TensorFlow/Keras seq-to-seq model that analyzes " +
                          "error logs and generates recommendations to an OCR/TensorFlow application that " +
                          "automates golf-ball sorting, boosting throughput fivefold. Together, these efforts " +
                          "integrate cloud architecture, machine learning, and real-time automation " +
                          "to deliver high-performance, client-customized solutions.",
            Technologies = new()
            {
              "Blazor",
              "Python",
              "TensorFlow",
              "OCR",
              "REST API",
              "AWS API Gateway",
              "AWS Lambda",
              "DynamoDB",
              "Amazon Cognito",
              "OAuth",
              "CloudWatch",
              "WebSockets",
              "C#",
              "VB.NET",
              "JavaScript",
              "ASP.NET",
              "Git"
            },
            Links = new()
            {
              new ExperienceClass.Link { Text = "Website", Url = "https://web.rangesystems.com" } 
            },
            ExampleImages = new List<string>() {
              "cards/images/ras-bays.png",
              "cards/images/ras-dashboard.png",
              "cards/images/ras-login.png"
            }
        },
        new ExperienceClass.ExpModel
        {
            Role = "Software Engineer",
            Company = "Circle.ooo",
            Dates = "May 2023 – Dec 2023",
            Location = "Tempe, AZ",
            ImageUrl = "cards/circle-card.png",
            Description = "I led the development of a key section of the " +
                          "Circle cross-platform mobile app—building a " +
                          "precise phone-to-phone distance detection algorithm, " +
                          "streamlining the profile-sharing workflow to boost throughput " +
                          "by 300%, and crafting new Share menus in Flutter/Dart to " +
                          "enhance the UI for seamless wireless data exchange.",
            Technologies = new()
            {
              "Flutter",
              "Dart",
              "NFC",
              "Accelerometer",
              "Bluetooth Low Energy",
              "Android Nearby Connections",
              "IOS Multipeer Connectivity",
              "Git"
            },
            Links = new()
            {
              new ExperienceClass.Link { Text = "Website", Url = "https://circle.ooo" } 
            },
            ExampleImages = new List<string>() {
              "cards/images/circle-dash.png",
              "cards/images/circle-ui.png",
              "cards/images/circle-vouch.png"
            }
        },
        new ExperienceClass.ExpModel
        {
          Role = "Software Engineer",
          Company = "Infosys",
          Dates = "May 2023 – Aug 2023",
          Location = "Phoenix, AZ",
          ImageUrl = "cards/infosys-card.png",
          Description = " I designed and implemented a Python-based algorithm—leveraging libraries " +
                        "such as Pandas and Polars for data handling, Beautiful Soup and Selectolax for web parsing, " +
                        "and MAPI for email integration—to fully automate the employee onboarding process. " +
                        "I wrapped the solution in a Tkinter GUI with argparse support for flexibility, and packaged " +
                        "it for cross-platform distribution using PyInstaller and Py2app. By collaborating closely " +
                        "with my team in a leadership role and managing version control via Git, I streamlined hiring " +
                        "workflows and cut daily candidate update time by 250%, all while ensuring flawless " +
                        "performance on macOS, Windows, and Linux.",
          Technologies = new()
          {
            "Python",
            "Pandas",
            "Polars",
            "Beautiful Soup",
            "Selectolax",
            "MAPI",
            "Tkinter",
            "Argparse",
            "PyInstaller",
            "Py2app",
            "Git"
          },
          Links = new()
          {
            new ExperienceClass.Link { Text = "Website", Url = "https://circle.ooo" } 
          }
        }
        // add other experiences here
    };

    private ExperienceClass.ExpModel SelectedExp;
    private double ClickX, ClickY;
    private string ShownModel = string.Empty;

    async Task ShowDetail(ExperienceClass.ExpModel exp)
    {
      ExperienceService.Show(exp);
    }

}