@using System.Globalization

<section id="about" class="py-5 section-bg" aria-label="about">
    <div class="about-me">
        <div class="blurb-content p-4">
            <div class="row gx-4 gy-4 align-items-stretch">
                <!-- Left side: Full height avatar -->
                <div class="profile-left col-12 col-lg-4 d-flex flex-column">
                    <div class="avatar flex-fill w-100 h-100"></div>
                </div>

                <!-- Right side: Header + Description -->
                <div class="profile-right col-12 col-lg-8 d-flex flex-column">
                    <div class="profile-header">
                        <h1>@Name</h1>
                        <p class="meta">@GenerateAge() years old • @Location</p>

                        <div class="d-flex flex-wrap justify-content-center mb-4">
                            @foreach (var tech in Technologies)
                            {
                                <div class="badge tech-badge me-2 mb-2">@tech</div>
                            }
                        </div>
                    </div>

                    <div class="profile-bio">
                        <p class="description-text">@string.Join(" ", resumeLines)</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code {

    string Name = "Zack LaCanna";
    string Location = "Scottsdale, Arizona";

    List<string> Technologies { get; set; } = new()
    {
        "C#", "Python", "AI", "Full-Stack", "Cloud Computing", "SaaS"
    };

    private int CalculateAge(DateTime birthDate)
    {
        var today = DateTime.Today;
        var age   = today.Year - birthDate.Year;
        if (today < birthDate.AddYears(age)) age--;
        return age;
    }

    private string GenerateAge()
    {
        return CalculateAge(DateTime.ParseExact("08-11-2001","MM-dd-yyyy",CultureInfo.InvariantCulture)).ToString();
    }
    private List<string> resumeLines = new()
    {
        "I am a full-stack engineer specializing in scalable web and cloud-native solutions using C#, Python, C++, Blazor, REST APIs, and AWS (Lambda, API Gateway, DynamoDB).",
        "I have built complex backends and SaaS applications featuring TensorFlow-powered ML, OCR pipelines, and real-time data processing.",
        "I thrive on solving complex challenges while ensuring performance, scalability, and reliability."
    };
    
    private readonly int teaserCount = 20;
    private string GenerateTeaser()
    {
        string fullBio = string.Join(" ", resumeLines);

        // split into words
        var words = fullBio
            .Split(' ', StringSplitOptions.RemoveEmptyEntries);

        // tease the first 20 words
        return string.Join(" ",
            words.Take(teaserCount)) + "…";
        
    }

    private string GenerateRemainerDescription()
    {
        string fullBio = string.Join(" ", resumeLines);

        // split into words
        var words = fullBio
            .Split(' ', StringSplitOptions.RemoveEmptyEntries);

        return string.Join(" ",
            words.Skip(teaserCount));  
    }
    

}