@using ZackV2.Components.Layout

@page "/"

<PageTitle>Zack LaCanna</PageTitle>

<div class="content">
    <div id="@CurrentSection.Id" class="@($"section-content {CurrentSection.Id}")">
        @CurrentSection.Fragment
    </div>

    <div class="navigation-controls">
        @if (CanGoBack)
        {
            <button class="nav-btn" @onclick="GoBack">
                <div class="icon-circle">
                    <i class="fas fa-arrow-left"></i>
                </div>
            </button>
        }
        @if (CanGoNext)
        {
            <button class="nav-btn" @onclick="GoNext">
                <div class="icon-circle">
                    <i class="fas fa-arrow-right"></i>
                </div>
            </button>
        }
    </div>
</div>

@code {

    [Parameter]
    public EventCallback<string> OnSectionChanged { get; set; }
    
    private int currentIndex = 0;
    private bool CanGoBack => currentIndex > 0;
    private bool CanGoNext => currentIndex < sections.Length - 1;
    private (string Id, RenderFragment Fragment) CurrentSection => sections[currentIndex];
    
    private readonly (string Id, RenderFragment Fragment)[] sections = new (string Id, RenderFragment)[]
    {
        ("about", @<AboutMe />),
        ("experience", @<Experience />),
        ("projects", @<Projects />),
        ("contact", @<ContactMe />)
    };
    
    private async Task GoNext()
    {
        if (CanGoNext)
        {
            currentIndex++;
            await OnSectionChanged.InvokeAsync(CurrentSection.Id);
        }
    }

    private async Task GoBack()
    {
        if (CanGoBack)
        {
            currentIndex--;
            await OnSectionChanged.InvokeAsync(CurrentSection.Id);
        }
    }
    
}
